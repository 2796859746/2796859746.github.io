<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>无影的博客</title>
  
  <subtitle>欢迎来到无影的博客</subtitle>
  <link href="https://2796859746.github.io/atom.xml" rel="self"/>
  
  <link href="https://2796859746.github.io/"/>
  <updated>2021-09-18T08:12:26.563Z</updated>
  <id>https://2796859746.github.io/</id>
  
  <author>
    <name>无影</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于hexo</title>
    <link href="https://2796859746.github.io/2021/09/18/hexo/"/>
    <id>https://2796859746.github.io/2021/09/18/hexo/</id>
    <published>2021-09-18T04:37:36.000Z</published>
    <updated>2021-09-18T08:12:26.563Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、了解-hexo"><a href="#一、了解-hexo" class="headerlink" title="一、了解 hexo"></a>一、了解 hexo</h2><h3 id="1-1-什么是-hexo？"><a href="#1-1-什么是-hexo？" class="headerlink" title="1.1 什么是 hexo？"></a>1.1 什么是 hexo？</h3><p>hexo 是使用 nodejs 开发的一个快速、简洁、高效、开源的静态博客生成器。</p><h3 id="1-2-hexo-如何解析文章？"><a href="#1-2-hexo-如何解析文章？" class="headerlink" title="1.2 hexo 如何解析文章？"></a>1.2 hexo 如何解析文章？</h3><p>hexo 使用 Markdown 解析文章，因此，文章需采用 Markdown 语法编写，在几秒内，即可利用靓丽的主题生成静态网页。类似于 jekyll、Octopress、Wordpress，我们可以用 hexo 创建自己的博客，托管到 github，绑定自己的域名。</p><h2 id="二、选择-hexo-的理由"><a href="#二、选择-hexo-的理由" class="headerlink" title="二、选择 hexo 的理由"></a>二、选择 hexo 的理由</h2><p>市场上也有不少其他类似 hexo 的博客生成器，为什么选择 hexo 呢？</p><ul><li><p>非常小巧，使用 nodejs 开发，下载安装时只需要几个简答的 npm 命令即可</p></li><li><p>纯静态博客，不需要额外的数据库、php 环境…仅仅需要一个 nodejs 环境即可</p></li><li><p>由于是静态博客，所以，可以非常方便部署到 github</p></li><li><p>支持 markdown 语法、兼容 windows linux mac，高可扩展性和自定义，而且有非常多的 hexo 主题</p></li></ul><h2 id="三、安装-hexo"><a href="#三、安装-hexo" class="headerlink" title="三、安装 hexo"></a>三、安装 hexo</h2><p>这里我们针对 windows 环境进行演示说明，其他环境大体上与此一致，详细请参照<a href="https://hexo.io/zh-cn/docs/index.html">官方文档</a>。</p><p>在安装 hexo 之前，你需要保证环境中有 Node.js 和 Git 环境，这里我们就不赘述他们俩的安装。</p><p>在 Node.js 和 Git 安装无误情况下，执行：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>通过 npm 进行 hexo 的全局安装，这么简单，一条命令 hexo 即安装完成。</p><h2 id="四、hexo-使用"><a href="#四、hexo-使用" class="headerlink" title="四、hexo 使用"></a>四、hexo 使用</h2><h3 id="4-1-建站"><a href="#4-1-建站" class="headerlink" title="4.1 建站"></a>4.1 建站</h3><p>安装 hexo 完成后，就可以进行使用了。</p><p>首先，对于不是从 github 更新的 hexo 库，我们需要自己初始化本地 hexo 库：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo init <span class="token operator">&lt;</span>folder<span class="token operator">&gt;</span>$ <span class="token builtin class-name">cd</span> <span class="token operator">&lt;</span>folder<span class="token operator">&gt;</span>$ <span class="token function">npm</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="4-2-结构说明"><a href="#4-2-结构说明" class="headerlink" title="4.2 结构说明"></a>4.2 结构说明</h3><h4 id="4-2-1-config-yml"><a href="#4-2-1-config-yml" class="headerlink" title="4.2.1 _config.yml"></a>4.2.1 _config.yml</h4><p>网站的<a href="https://hexo.io/docs/configuration.html">配置</a>信息，可以在此配置大部分的参数。</p><h4 id="4-2-2-package-json"><a href="#4-2-2-package-json" class="headerlink" title="4.2.2 package.json"></a>4.2.2 package.json</h4><p>应用程序的信息。EJS, Stylus 和 Markdown renderer 已默认安装，你可以自由移除。</p><blockquote><p>package.json<br>{<br>“name”: “hexo-site”,<br>“version”: “0.0.0”,<br>“private”: true,<br>“hexo”: {<br>“version”: “”<br>},<br>“dependencies”: {<br>“hexo”: “^3.0.0”,<br>“hexo-generator-archive”: “^0.1.0”,<br>“hexo-generator-category”: “^0.1.0”,<br>“hexo-generator-index”: “^0.1.0”,<br>“hexo-generator-tag”: “^0.1.0”,<br>“hexo-renderer-ejs”: “^0.1.0”,<br>“hexo-renderer-stylus”: “^0.2.0”,<br>“hexo-renderer-marked”: “^0.2.4”,<br>“hexo-server”: “^0.1.2”<br>}<br>}</p></blockquote><h4 id="4-2-3-scaffolds"><a href="#4-2-3-scaffolds" class="headerlink" title="4.2.3 scaffolds"></a>4.2.3 scaffolds</h4><p>模版 文件夹。当你新建文章时，Hexo 会根据 scaffold 来建立文件。</p><h4 id="4-2-4-source"><a href="#4-2-4-source" class="headerlink" title="4.2.4 source"></a>4.2.4 source</h4><p>资源文件夹是存放用户资源(blog)的地方。</p><h4 id="4-2-5-public"><a href="#4-2-5-public" class="headerlink" title="4.2.5 public"></a>4.2.5 public</h4><p>Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。</p><h4 id="4-2-6-themes"><a href="#4-2-6-themes" class="headerlink" title="4.2.6 themes"></a>4.2.6 themes</h4><p>主题文件夹。Hexo 会根据主题来生成静态页面。</p><p>这样即建站成功。</p><h3 id="4-3-写作"><a href="#4-3-写作" class="headerlink" title="4.3 写作"></a>4.3 写作</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token punctuation">[</span>layout<span class="token punctuation">]</span> <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这条命令用来创建一篇新文章，用 hexo new 创建的文章格式是 md，和普通 markdown 文档不一样，它包含了当前 layout 提供的头部模板，如 post layout 布局的文章，顶部会出现：</p><blockquote><p>— —<br>title: Hexo 介绍及常用安装使用<br>date: 2016-11-27 21:59:22<br>tags: hexo<br>— —</p></blockquote><p>在_config.yml 中会有 default_layout 这个参数，默认是 post，也就是说不加 layout 参数时，new 出来的文章使用 post 布局。当然，default_layout 可以根据自己的需要进行更改。<br>Hexo 有三种默认布局：post、page 和 draft，它们分别对应不同的路径，而你自定义的其他布局和 post 相同，都将储存到 source/_posts 文件夹。</p><h4 id="4-3-1-layout"><a href="#4-3-1-layout" class="headerlink" title="4.3.1 layout"></a>4.3.1 layout</h4><p>Hexo 有三种默认布局：post、page 和 draft，它们分别对应不同的路径，而你自定义的其他布局和 post 相同，都将储存到 source/_posts 文件夹。</p><table><thead><tr><th align="center">布局</th><th align="center">路径</th></tr></thead><tbody><tr><td align="center">post</td><td align="center">source/_posts</td></tr><tr><td align="center">page</td><td align="center">source</td></tr><tr><td align="center">draft</td><td align="center">source/_drafts</td></tr></tbody></table><h4 id="4-3-2-文件名称"><a href="#4-3-2-文件名称" class="headerlink" title="4.3.2 文件名称"></a>4.3.2 文件名称</h4><p>Hexo 默认以标题做为文件名称，但你可以编辑_config.yml 中的 new_post_name 参数来改变默认的文件名称，举例来说，设为 :year-:month-:day-:title.md 可让您更方便的通过日期来管理文章。</p><table><thead><tr><th align="center">变量</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">:title</td><td align="center">标题（小写，空格将会被替换为短杠）</td></tr><tr><td align="center">:year</td><td align="center">建立的年份，比如， 2016</td></tr><tr><td align="center">:month</td><td align="center">建立的月份（有前导零），比如， 04</td></tr><tr><td align="center">:i_month</td><td align="center">建立的月份（无前导零），比如， 4</td></tr><tr><td align="center">:day</td><td align="center">建立的日期（有前导零），比如， 07</td></tr><tr><td align="center">:i_day</td><td align="center">建立的日期（无前导零），比如， 7</td></tr></tbody></table><p>文件创建成功，剩下的就是用 markdown 语法进行愉快的创作了！</p><h3 id="4-4-生成及部署"><a href="#4-4-生成及部署" class="headerlink" title="4.4 生成及部署"></a>4.4 生成及部署</h3><h4 id="4-4-1-生成"><a href="#4-4-1-生成" class="headerlink" title="4.4.1 生成"></a>4.4.1 生成</h4><p>文档编写完成后，想要对外发布就得先进行文章的解析和资源的生成：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>该命令生成静态网页文件。</p><h4 id="4-4-2-本地启动"><a href="#4-4-2-本地启动" class="headerlink" title="4.4.2 本地启动"></a>4.4.2 本地启动</h4><p>生成完可以在本地进行启动测试：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>启动后，可以通过 <a href="http://localhost:4000/">http://localhost:4000/</a> 访问本地 blog。</p><table><thead><tr><th align="center">选项</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">-p,–port</td><td align="center">重设端口</td></tr><tr><td align="center">-s,–static</td><td align="center">只使用静态文件</td></tr><tr><td align="center">-l,–log</td><td align="center">启动日记记录，使用覆盖记录格式</td></tr></tbody></table><h4 id="4-4-3-部署"><a href="#4-4-3-部署" class="headerlink" title="4.4.3 部署"></a>4.4.3 部署</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>该命令用来对 generate 后的资源进行部署，但是注意，使用该命令之前，需要安装 hexo-deployer-git 插件：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装完成，我们可以进行部署，这里我们还得明确一点，部署到哪？</p><p>在_config.yml 中可以指定部署目的地：</p><blockquote><p>deploy:<br>— type: git<br>repo:<br>— type: heroku<br>repo:</p></blockquote><p>对于 git 方式来说，repo 建议使用 ssh 协议而非 https 协议，还有，你需要提前在 github 上配置好当前机器的公钥。</p><p>这个指定的 git repo 是一个 <a href="https://pages.github.com/">github pages</a>，他是 github 为方便程序员们发布项目的说明文档而开放的服务，而 gh Pgaes 的美好之处在于，它有足以胜任成为一个独立博客的能耐。这里不详细介绍，你可以去官网学习。</p><p>在 deploy 之后，访问 github pages 地址你会发现文档已经全部发布。</p><p>如果嫌麻烦，可以执行:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate -d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>or</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo g -d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将编译和部署合并成一步操作</p><h4 id="4-4-4-清理"><a href="#4-4-4-清理" class="headerlink" title="4.4.4 清理"></a>4.4.4 清理</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo clean<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>清理掉以生成的静态网页相关文件</p><h3 id="4-5-针对-github-上已有的-blog-仓库"><a href="#4-5-针对-github-上已有的-blog-仓库" class="headerlink" title="4.5 针对 github 上已有的 blog 仓库"></a>4.5 针对 github 上已有的 blog 仓库</h3><p>实际工作中，往往是已经有一个 blog 仓库，我们需要更新它到本地并用 hexo 去管理。</p><p>由于 hexo 管理下的 node_modules 文件夹过大，一般我们不会将其放在 github 中，所以 clone 下来的文件夹中没有 node_modules，需要执行如下命令进行 node_modules 的安装：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这种情况下不需要执行初始化 hexo init 了，之后的其他操作都还是一样的。</p><h5 id="注：以上对于-hexo-的常用知识进行了介绍，如果你还需要了解更详细的内容，从这里到官网进行学习。"><a href="#注：以上对于-hexo-的常用知识进行了介绍，如果你还需要了解更详细的内容，从这里到官网进行学习。" class="headerlink" title="注：以上对于 hexo 的常用知识进行了介绍，如果你还需要了解更详细的内容，从这里到官网进行学习。"></a>注：以上对于 hexo 的常用知识进行了介绍，如果你还需要了解更详细的内容，从<a href="https://hexo.io/docs/">这里</a>到官网进行学习。</h5>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、了解-hexo&quot;&gt;&lt;a href=&quot;#一、了解-hexo&quot; class=&quot;headerlink&quot; title=&quot;一、了解 hexo&quot;&gt;&lt;/a&gt;一、了解 hexo&lt;/h2&gt;&lt;h3 id=&quot;1-1-什么是-hexo？&quot;&gt;&lt;a href=&quot;#1-1-什么是-hexo</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>hello</title>
    <link href="https://2796859746.github.io/2021/09/16/hello/"/>
    <id>https://2796859746.github.io/2021/09/16/hello/</id>
    <published>2021-09-16T10:49:34.000Z</published>
    <updated>2021-09-18T04:34:35.595Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hello-world"><a href="#hello-world" class="headerlink" title="hello world"></a>hello world</h2><blockquote><p>测试 hexo 博客发布</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;hello-world&quot;&gt;&lt;a href=&quot;#hello-world&quot; class=&quot;headerlink&quot; title=&quot;hello world&quot;&gt;&lt;/a&gt;hello world&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;测试 hexo 博客发布&lt;/p&gt;
&lt;/bl</summary>
      
    
    
    
    
    <category term="hello-world" scheme="https://2796859746.github.io/tags/hello-world/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://2796859746.github.io/2021/09/16/hello-world/"/>
    <id>https://2796859746.github.io/2021/09/16/hello-world/</id>
    <published>2021-09-16T09:44:31.363Z</published>
    <updated>1985-10-26T08:15:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
